{"version":3,"file":"static/js/152.472ae00c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/filter/selectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://react-homework-template/./src/components/ContactCard/ContactCard.module.css?4c4f","components/ContactCard/ContactCard.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"welcomeSection\":\"Section_welcomeSection__mEGqj\",\"addContactSection\":\"Section_addContactSection__2rrAX\",\"contactListSection\":\"Section_contactListSection__IcCNs\",\"sectionTitle\":\"Section_sectionTitle__in2ym\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport function Section({ className, title, children }) {\n  return (\n    <section className={css[className]}>\n      <div className=\"container\">\n        <h2 className={css.sectionTitle}>{title}</h2>\n        {children}\n      </div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  className: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"error\":\"ContactForm_error__C1smZ\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = yup.object({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(`Name field can't be empty`),\n  number: yup\n    .string()\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(`Phone number field can't be empty`),\n});\n\nexport function AddContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isContactAlreadyAdded = name => {\n    const nameToLowerCase = name.toLowerCase();\n\n    return contacts.findIndex(\n      contact => contact.name.toLowerCase() === nameToLowerCase\n    );\n  };\n\n  const handleSubmit = (values, actions) => {\n    const { resetForm } = actions;\n    const name = values.name;\n    const number = values.number;\n\n    const isAdded = isContactAlreadyAdded(name);\n\n    if (isAdded !== -1) {\n      toast.error('This contact is already in your contacts list.');\n      resetForm();\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={css.form}>\n        <label className={css.label}>\n          Name\n          <Field className={css.input} type=\"text\" name=\"name\" required />\n          <ErrorMessage name=\"name\" component=\"p\" className={css.error} />\n        </label>\n        <label className={css.label}>\n          Number\n          <Field className={css.input} type=\"tel\" name=\"number\" required />\n          <ErrorMessage name=\"number\" component=\"p\" className={css.error} />\n        </label>\n        <button\n          className={css.submitBtn}\n          type=\"submit\"\n          aria-label=\"add contact\"\n        >\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"searchIcon\":\"Filter_searchIcon__ryLEh\",\"input\":\"Filter_input__N7T3z\"};","export const selectFilter = state => state.filter;\n","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { LuSearch } from 'react-icons/lu';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <i className={css.searchIcon} aria-hidden=\"true\">\n        <LuSearch />\n      </i>\n      <input\n        className={css.input}\n        id=\"search\"\n        type=\"search\"\n        placeholder=\"Search by name\"\n        value={filterValue}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactCard\":\"ContactCard_contactCard__oGzDq\",\"contactDetails\":\"ContactCard_contactDetails__f71ym\",\"contactName\":\"ContactCard_contactName__PCV2E\",\"contactNumber\":\"ContactCard_contactNumber__qMnyX\",\"contactNumberIcon\":\"ContactCard_contactNumberIcon__m7X3u\",\"deleteBtn\":\"ContactCard_deleteBtn__+alLn\"};","import css from './ContactCard.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { FaPhoneAlt } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nexport function ContactCard({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className={css.contactCard} id={id}>\n      <div className={css.contactDetails}>\n        <p className={css.contactName}>{name}</p>\n        <p className={css.contactNumber}>\n          <span className={css.contactNumberIcon}>\n            <FaPhoneAlt />\n          </span>\n          {number}\n        </p>\n      </div>\n      <button\n        className={css.deleteBtn}\n        type=\"button\"\n        onClick={handleDelete}\n        aria-label=\"delete contact\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import css from './ContactsList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { ContactCard } from 'components/ContactCard';\n\nexport function ContactsList() {\n  const contactsFromState = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n\n  let filteredContacts = [...contactsFromState];\n\n  const getFilteredContacts = filterValue => {\n    const normalizedValue = filterValue.trim().toLowerCase();\n\n    return (filteredContacts = contactsFromState\n      .filter(contact => contact.name.toLowerCase().includes(normalizedValue))\n      .sort((a, b) =>\n        a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      ));\n  };\n\n  getFilteredContacts(filterValue);\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactCard key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Section } from 'components/Section';\nimport  {AddContactForm}  from '../components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactsList } from 'components/ContactsList';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <>\n      <Section className=\"addContactSection\" title=\"Phonebook\">\n        <AddContactForm />\n      </Section>\n      {isLoading && !error && <p className=\"message\">Loading contacts...</p>}\n      {error && (\n        <p style={{ textAlign: 'center', color: 'red' }}>\n          Ooops! Something went wrong, please try again...\n        </p>\n      )}\n      {contacts.length !== 0 && (\n        <Section className=\"contactListSection\" title=\"Contacts\">\n          <Filter />\n          <ContactsList />\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Section","className","title","children","css","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","initialValues","name","number","schema","yup","matches","required","AddContactForm","dispatch","useDispatch","useSelector","validationSchema","onSubmit","values","actions","resetForm","isAdded","nameToLowerCase","toLowerCase","findIndex","contact","isContactAlreadyAdded","toast","addContact","type","component","selectFilter","filter","Filter","filterValue","id","placeholder","value","onChange","e","currentTarget","setFilter","ContactCard","onClick","deleteContact","ContactsList","contactsFromState","filteredContacts","normalizedValue","trim","includes","sort","a","b","localeCompare","getFilteredContacts","map","useEffect","fetchContacts","style","textAlign","color","length"],"sourceRoot":""}